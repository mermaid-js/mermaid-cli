name: 'Build, test and deploy mermaid-cli Docker image'
on: [push,pull_request]
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKERFILE: DockerfileBuild
      IMAGENAME: mermaid-cli
      DOCKER_IO_REPOSITORY: minlag/mermaid-cli
      INPUT_DATA: test-positive
      PERCY_TOKEN: ${{secrets.PERCY_TOKEN}}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.11
      with:
        versionSpec: '5.x'

    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.11

    - name: Convert repository name to lower case
      run: echo "GITHUB_REPOSITORY_LOWER_CASE=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Get release version
      run: echo "RELEASE_VERSION=${{ steps.gitversion.outputs.semVer }}" >> $GITHUB_ENV

    - name: Create image tag
      run: echo "IMAGETAG=${{env.GITHUB_REPOSITORY_LOWER_CASE}}/$IMAGENAME:${{env.RELEASE_VERSION}}" >> $GITHUB_ENV

    - name: Docker build
      run: docker build -t ${{env.IMAGETAG}} . -f $DOCKERFILE

    - name: Run e2e tests
      run: bash run-tests.sh ${{env.INPUT_DATA}} ${{env.IMAGETAG}}

    - name: Convert all svg files to png before uploading for automatic inspection
      run: |
        npm install convert-svg-to-png
        ls -la ${{env.INPUT_DATA}}
        # This will overwite any PNG files with the same name that have been created by run-tests.sh
        $(npm bin)/convert-svg-to-png ${{env.INPUT_DATA}}/graph-with-br.mmd.svg
        $(npm bin)/convert-svg-to-png ${{env.INPUT_DATA}}/graph-with-br.mmd-stdin.svg

    - name: Upload diagrams for manual inspection
      uses: actions/upload-artifact@v2.3.1
      with:
        name: output
        path: ./${{env.INPUT_DATA}}

    - name: Upload diagrams for automatic inspection
      uses: MindaugasLaganeckas/percy-upload@v1.0.0
      with:
        inFolder: ${{env.INPUT_DATA}}

    - name: Publish to Github Registry
      if: github.ref == 'refs/heads/master'
      uses: elgohr/Publish-Docker-Github-Action@3.04
      with:
        name: ${{env.GITHUB_REPOSITORY_LOWER_CASE}}/${{env.IMAGENAME}}
        username: $GITHUB_ACTOR
        password: ${{secrets.GITHUB_TOKEN}}
        registry: docker.pkg.github.com
        dockerfile: ${{env.DOCKERFILE}}
        snapshot: true
        tags: "latest,${{env.RELEASE_VERSION}}"

    - name: Publish to Docker.io Registry
      if: github.ref == 'refs/heads/master'
      uses: elgohr/Publish-Docker-Github-Action@3.04
      with:
        name: ${{env.DOCKER_IO_REPOSITORY}}
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
        dockerfile: ${{env.DOCKERFILE}}
        snapshot: true
        tags: "latest,${{env.RELEASE_VERSION}}"
