name: Publish release

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest

    env:
      DOCKERFILE: Dockerfile
      IMAGENAME: mermaid-cli
      DOCKER_IO_REPOSITORY: minlag/mermaid-cli

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: fregante/setup-git-user@v1

    - uses: actions/setup-node@v2
      with:
        node-version: 12
        cache: npm
        registry-url: https://registry.npmjs.org/
    - name: Install Yarn
      run: npm i yarn --global

    - name: Build the package
      run: |
        yarn
        chmod 755 copy_modules.sh
        ./copy_modules.sh
        yarn prepublishOnly

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.11
      with:
        versionSpec: '5.x'

    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.11

    - name: Get release version
      run: echo "RELEASE_VERSION=${{ steps.gitversion.outputs.semVer }}" >> $GITHUB_ENV

    - name: Prepare release
      run: npm version --no-git-tag-version --allow-same-version ${{env.RELEASE_VERSION}}

    - name: Publish to npmjs
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

    - name: The job has failed
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2.2.4
      with:
        name: npm-logs
        path: /home/runner/.npm/_logs

    - name: Publish to Docker.io Registry
      uses: elgohr/Publish-Docker-Github-Action@3.04
      with:
        name: ${{env.DOCKER_IO_REPOSITORY}}
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
        dockerfile: ${{env.DOCKERFILE}}
        buildargs: ${{env.RELEASE_VERSION}}
        snapshot: false
        tags: "latest,${{env.RELEASE_VERSION}}"

    - name: Post deployment tests
      run: |
        for i in $(ls test-positive/*.mmd); do docker run -v $(pwd):/data ${{env.DOCKER_IO_REPOSITORY}}:${{env.RELEASE_VERSION}} -i /data/$i; done
        for i in $(ls test-positive/*.mmd); do cat $i | docker run -i -v $(pwd):/data ${{env.DOCKER_IO_REPOSITORY}}:${{env.RELEASE_VERSION}} -o /data/$i-stdin.svg; done

    - name: Commit new version to the repository
      run: |
        git add package.json
        git checkout master
        git commit -m "Bump version ${{env.RELEASE_VERSION}}"
        git push --no-verify

    # For manual inspection of the generated artifacts
    - uses: actions/upload-artifact@v2.2.4
      with:
        name: output
        path: ./test-positive
